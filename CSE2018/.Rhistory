parts <- strsplit(user_input, " ")
parts <- parts[[1]]
x1 <- as.numeric(parts[1])
op <- parts[2]
x2 <- as.numeric(parts[3])
value <- switch (op,
"+" = x1 + x2,
"-" = x1 - x2,
"*" = x1 * x2,
"/" = x1 / x2
)
print(
value
)
numset <- 1:100
for(x in numset) {
if(x %% 2 == 0 && x %% 3 == 0) print(paste(x, "SIX"))
else if(x %% 2 == 0) print(paste(x, "TWO"))
else if (x %% 3 == 0) print(paste(x, "THREE"))
}
user_input <- as.integer(readline("Specify a number of your choice! > "))
x_temp <- user_input
dig_sum <- 0
while(x_temp > 0) {
digit <- x_temp %% 10;
print(digit)
dig_sum <- dig_sum + (digit ^ 3)
x_temp <- x_temp %/% 10;
}
if(dig_sum == user_input) {
print("Armstrong number detected.")
} else {
print("Armstrong number not detected.")
}
greet <- function(name) {
print(paste('Hello, ', name, '! You are amazing.', sep = ''))
}
greet('Dev')
x <- 1:20
squared <- function(i) {
return(i*i)
}
squared(x)
factors <- function(x) {
y <- seq(1, x)
return(y[x %% y == 0])
}
print('Factors of 10 are')
print(factors(10))
print('Factors of 9190 are')
print(factors(9190))
sumofnatural <- function(n) {
return(sum(0:n))
}
print('Sum of first 10 natural numbers')
print(sumofnatural(10))
knit_with_parameters('~/Repositories/UG-Courses/CSE2018/Experiment4.Rmd')
knit_with_parameters('~/Repositories/UG-Courses/CSE2018/Experiment4.Rmd')
#x <- as.numeric(readline("Specify a number! > "))
#if(x %% 2 == 0) {
#  print("Even number detected.")
#} else {
#  print("Odd number detected.")
#}
#x <- as.numeric(readline("Specify a number! > "))
#if(x %% 2 == 0) {
#  print("Even number detected.")
#} else {
#  print("Odd number detected.")
#}
y <- as.numeric(
readline("Specify a number! > ")
)
x <- 131198
y <- "Hello World"
print(x)
print(y)
print(x) # initial value
x <- 2 * x # value of x will be doubled
print(x) # final value
rm(x)
rm(y)
print('x, y variables were removed')
anEnv <- new.env()
# assign a value to a variable
# inside created environment
assign('name', "Contoso", anEnv)
# another one
assign('age', 23, anEnv)
# get the variable values
get('name', anEnv)
get('age', anEnv)
ls(anEnv)
rm('name', envir = anEnv)
print("removed variable 'name' from anEnv")
ls(anEnv) # only age will exist
rm(anEnv)
print('removed environment anEnv')
getwd()
# it may be set either relative to current directory
setwd('../CSE2019')
afterFirstSet <- getwd()
# or relative to system root
setwd('/Users/Shared')
afterSecondSet <- getwd()
print(afterFirstSet)
print(afterSecondSet)
log(16, base = 4) # using with custom base
log2(8) # using with 2 as base
log10(10000) # using with 10 as base
log(exp(10), base = exp(1)) # natural logarithm, base = e
# used to compute euler's const
# and higher powers of exp fn
exp(1) # euler's const
exp(10) # e ^ 10
# similar to modulus
# computes absolute value of a numeric
abs(-909)
factorial(5) # 5 * 4 * 3 * 2 * 1
sqrt(144) # will give 12 as 12 ^ 2 = 144
numY <- 17.29
numY
intX <- 69L # L is used to denote it's integer value
intX
point <- 3 + 2i
print(point)
flag <- TRUE
print(flag)
anotherFlag <- FALSE
print(anotherFlag)
name <- "Contoso Smith"
print(name)
aDate <- Sys.Date() # current date
aTime <- Sys.time() # current time
print(aDate)
print(aTime)
intY <- as.integer(9.9)
print(intY)
numZ <- as.numeric(9L)
print(numZ)
numA <- as.numeric(flag)
print(numA) # logical bool to numeric
class(flag)
class(intY)
class(aTime)
class(aDate)
class(numY)
class(intX)
class(numZ)
is.integer(9)
is.character(intX)
is.character(name)
is.complex(point)
NaN
NA
1 / 0
is.finite(1 / 0)
is.infinite(Inf)
as.logical(name) # will produce NA, since x is character
# example of NaN
print(Inf - Inf)
aStr <- "Hello World"
substr(aStr, 7, 11) # start stop index specified (inclusive)
x <- "Welcome"
y <- "Change"
paste(x, y) # by default space used as seperator
nchar(x)
# hours in leap year
leapYearHours <- 24 * 366
print(leapYearHours)
# convert km to m
km <- readline('Input km: ')
km <- as.numeric(km)
print(paste('Output: ', km * 1000, 'm'))
# hours in a year
yearHours <- 24 * 365
print(yearHours)
inputNumber <- as.numeric(readline('Input number: '))
print(paste("Square Root: ", sqrt(inputNumber)))
# volume of rod
radius = as.numeric(readline("Radius input: "))
height = as.numeric(readline("Height input: "))
volume = pi * radius * radius * height
print(paste("Volume is ", volume))
# value of light year
secondsInAYear = yearHours * 3600
speedOfLight = 3e8
lightYear = speedOfLight * secondsInAYear
print(paste(as.character(lightYear),  "m"))
# approx time since Unix epoch
# assuming all years have 365 days
# this is solely an approximation
# due to ease of calculations
yearsSinceEpoch = 2019 - 1970
print(yearsSinceEpoch * secondsInAYear * 1000)
# using Unix Epoch long ms
timeInSeconds = as.numeric(Sys.Date())
timeInMs = timeInSeconds * 1000
print(timeInMs)
x <- as.numeric(readline("Specify a number! "))
if(x %% 2 == 0) {
print("Even number detected.")
} else {
print("Odd number detected.")
}
y <- as.numeric(
readline("Specify a number! ")
)
ctr <- 0
for(index in seq(1, y)) {
if(y %% index == 0) ctr <- ctr + 1
}
if(ctr == 2) {
print("Prime")
} else {
print("Composite")
}
print('An expression is of the format x1 op x2, where x1, x2 are two numbers, op is an operator like +, -, *, /. Please make sure that x1, op, x2 are space seperated.')
user_input <- readline('Specify an expression! ')
parts <- strsplit(user_input, " ")
parts <- parts[[1]]
x1 <- as.numeric(parts[1])
op <- parts[2]
x2 <- as.numeric(parts[3])
value <- switch (op,
"+" = x1 + x2,
"-" = x1 - x2,
"*" = x1 * x2,
"/" = x1 / x2
)
print(
value
)
numset <- 1:100
for(x in numset) {
if(x %% 2 == 0 && x %% 3 == 0) print(paste(x, "SIX"))
else if(x %% 2 == 0) print(paste(x, "TWO"))
else if (x %% 3 == 0) print(paste(x, "THREE"))
}
user_input <- as.integer(readline("Specify a number of your choice! > "))
x_temp <- user_input
dig_sum <- 0
while(x_temp > 0) {
digit <- x_temp %% 10;
print(digit)
dig_sum <- dig_sum + (digit ^ 3)
x_temp <- x_temp %/% 10;
}
if(dig_sum == user_input) {
print("Armstrong number detected.")
} else {
print("Armstrong number not detected.")
}
greet <- function(name) {
print(paste('Hello, ', name, '! You are amazing.', sep = ''))
}
greet('Dev')
x <- 1:20
squared <- function(i) {
return(i*i)
}
squared(x)
factors <- function(x) {
y <- seq(1, x)
return(y[x %% y == 0])
}
print('Factors of 10 are')
print(factors(10))
print('Factors of 9190 are')
print(factors(9190))
sumofnatural <- function(n) {
return(sum(0:n))
}
print('Sum of first 10 natural numbers')
print(sumofnatural(10))
x <- as.numeric(readline("Specify a number! "))
if(x %% 2 == 0) {
print("Even number detected.")
} else {
print("Odd number detected.")
}
x <- as.numeric(readline("Specify a number! "))
if(x %% 2 == 0) {
print("Even number detected.")
} else {
print("Odd number detected.")
}
x <- as.numeric(readline("Specify a number "))
if(x %% 2 == 0) {
print("Even number detected.")
} else {
print("Odd number detected.")
}
install.packages('tinytex')
tinytex::install_tinytex()
install.packages('rmarkdown')
install.packages("rmarkdown")
inputNumber <- as.numeric(readline('Input number: '))
print(paste("Square Root: ", sqrt(inputNumber)))
inputNumber <- as.numeric(readline('Input number: '))
x <- inputNumber
if(x %% 2 == 0) {
print("Even number detected.")
} else {
print("Odd number detected.")
}
x <- inputNumber
if(x%%2== 0) {
print("Even number detected.")
} else {
print("Odd number detected.")
}
x <- as.integer(
readline('Specify a number!')
)
if(x // 2== 0) {
x <- as.integer(
readline('Specify a number!')
)
if(x / 2== 0) {
print("Even number detected.")
} else {
print("Odd number detected.")
}
x <- as.integer(
readline('Specify a number!')
)
x%%2
if(x %% 2 == 0) {
print("Even number detected.")
} else {
print("Odd number detected.")
}
x <- as.integer(
readline('Specify a number!')
)
x%%2
if(x[1] %% 2 == 0) {
print("Even number detected.")
} else {
print("Odd number detected.")
}
y <- as.numeric(
readline("Specify a number! ")
)
ctr <- 0
for(index in seq(1, y)) {
if(y %% index == 0) ctr <- ctr + 1
}
if(ctr == 2) {
print("Prime")
} else {
print("Composite")
}
print('An expression is of the format x1 op x2, where x1, x2 are two numbers, op is an operator like +, -, *, /. Please make sure that x1, op, x2 are space seperated.')
user_input <- readline('Specify an expression! ')
parts <- strsplit(user_input, " ")
parts <- parts[[1]]
x1 <- as.numeric(parts[1])
op <- parts[2]
x2 <- as.numeric(parts[3])
value <- switch (op,
"+" = x1 + x2,
"-" = x1 - x2,
"*" = x1 * x2,
"/" = x1 / x2
)
print(
value
)
numset <- 1:100
for(x in numset) {
if(x %% 2 == 0 && x %% 3 == 0) print(paste(x, "SIX"))
else if(x %% 2 == 0) print(paste(x, "TWO"))
else if (x %% 3 == 0) print(paste(x, "THREE"))
}
user_input <- as.integer(readline("Specify a number of your choice! > "))
x_temp <- user_input
dig_sum <- 0
while(x_temp > 0) {
digit <- x_temp %% 10;
print(digit)
dig_sum <- dig_sum + (digit ^ 3)
x_temp <- x_temp %/% 10;
}
if(dig_sum == user_input) {
print("Armstrong number detected.")
} else {
print("Armstrong number not detected.")
}
greet <- function(name) {
print(paste('Hello, ', name, '! You are amazing.', sep = ''))
}
greet('Dev')
x <- 1:20
squared <- function(i) {
return(i*i)
}
squared(x)
factors <- function(x) {
y <- seq(1, x)
return(y[x %% y == 0])
}
print('Factors of 10 are')
print(factors(10))
print('Factors of 9190 are')
print(factors(9190))
sumofnatural <- function(n) {
return(sum(0:n))
}
print('Sum of first 10 natural numbers')
print(sumofnatural(10))
x <- as.integer(
readline('Specify a number!')
)
x%%2 == 0
if(x %% 2 == 0) {
print("Even number detected.")
} else {
print("Odd number detected.")
}
x <- as.integer(
readline('Specify a number!')
)
v <- x%%2 == 0
if(v) {
print("Even number detected.")
} else {
print("Odd number detected.")
}
x <- as.integer(
readline('Specify a number:')
)
#if(x %% 2 == 0) {
#  print("Even number detected.")
#} else {
#  print("Odd number detected.")
#}
print(x)
y <- as.numeric(
readline("Specify a number: ")
)
ctr <- 0
for(index in seq(1, y)) {
if(y %% index == 0) ctr <- ctr + 1
}
if(ctr == 2) {
print("Prime")
} else {
print("Composite")
}
print('An expression is of the format x1 op x2, where x1, x2 are two numbers, op is an operator like +, -, *, /. Please make sure that x1, op, x2 are space seperated.')
user_input <- readline('Specify an expression! ')
parts <- strsplit(user_input, " ")
parts <- parts[[1]]
x1 <- as.numeric(parts[1])
op <- parts[2]
x2 <- as.numeric(parts[3])
value <- switch (op,
"+" = x1 + x2,
"-" = x1 - x2,
"*" = x1 * x2,
"/" = x1 / x2
)
print(
value
)
numset <- 1:100
for(x in numset) {
if(x %% 2 == 0 && x %% 3 == 0) print(paste(x, "SIX"))
else if(x %% 2 == 0) print(paste(x, "TWO"))
else if (x %% 3 == 0) print(paste(x, "THREE"))
}
user_input <- as.integer(readline("Specify a number of your choice! > "))
x_temp <- user_input
dig_sum <- 0
while(x_temp > 0) {
digit <- x_temp %% 10;
print(digit)
dig_sum <- dig_sum + (digit ^ 3)
x_temp <- x_temp %/% 10;
}
if(dig_sum == user_input) {
print("Armstrong number detected.")
} else {
print("Armstrong number not detected.")
}
greet <- function(name) {
print(paste('Hello, ', name, '! You are amazing.', sep = ''))
}
greet('Dev')
x <- 1:20
squared <- function(i) {
return(i*i)
}
squared(x)
factors <- function(x) {
y <- seq(1, x)
return(y[x %% y == 0])
}
print('Factors of 10 are')
print(factors(10))
print('Factors of 9190 are')
print(factors(9190))
sumofnatural <- function(n) {
return(sum(0:n))
}
print('Sum of first 10 natural numbers')
print(sumofnatural(10))
unlink('Experiment4_cache', recursive = TRUE)
unlink('Experiment4_cache', recursive = TRUE)
unlink('Experiment4_cache', recursive = TRUE)
